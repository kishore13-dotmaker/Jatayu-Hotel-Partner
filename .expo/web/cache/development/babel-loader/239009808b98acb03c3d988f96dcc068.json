{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"children\", \"style\", \"imageStyle\", \"imageRef\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Image = require(\"./Image\");\n\nvar React = require('react');\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar View = require(\"../Components/View/View\");\n\nvar ImageBackground = function (_React$Component) {\n  _inherits(ImageBackground, _React$Component);\n\n  var _super = _createSuper(ImageBackground);\n\n  function ImageBackground() {\n    var _this;\n\n    _classCallCheck(this, ImageBackground);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._viewRef = null;\n\n    _this._captureRef = function (ref) {\n      _this._viewRef = ref;\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageBackground, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      var viewRef = this._viewRef;\n\n      if (viewRef) {\n        viewRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          imageStyle = _this$props.imageStyle,\n          imageRef = _this$props.imageRef,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(View, {\n        accessibilityIgnoresInvertColors: true,\n        style: style,\n        ref: this._captureRef\n      }, React.createElement(Image, _extends({}, props, {\n        style: [StyleSheet.absoluteFill, {\n          width: style.width,\n          height: style.height\n        }, imageStyle],\n        ref: imageRef\n      })), children);\n    }\n  }]);\n\n  return ImageBackground;\n}(React.Component);\n\nmodule.exports = ImageBackground;","map":{"version":3,"sources":["C:/Users/kisho/Downloads/phonestly-app-Google-pay/phonestly-app-Google-pay/node_modules/react-native/Libraries/Image/ImageBackground.js"],"names":["Image","require","React","StyleSheet","View","ImageBackground","_viewRef","_captureRef","ref","props","viewRef","setNativeProps","children","style","imageStyle","imageRef","absoluteFill","width","height","Component","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,WAArB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,UAAU,GAAGF,OAAO,4BAA1B;;AACA,IAAMG,IAAI,GAAGH,OAAO,2BAApB;;IA0BMI,e;;;;;;;;;;;;;;;UASJC,Q,GAA2C,I;;UAE3CC,W,GAAc,UAAAC,GAAG,EAAI;AACnB,YAAKF,QAAL,GAAgBE,GAAhB;AACD,K;;;;;;;WAZD,wBAAeC,KAAf,EAA8B;AAE5B,UAAMC,OAAO,GAAG,KAAKJ,QAArB;;AACA,UAAII,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACC,cAAR,CAAuBF,KAAvB;AACD;AACF;;;WAQD,kBAAqB;AACnB,wBAA0D,KAAKA,KAA/D;AAAA,UAAOG,QAAP,eAAOA,QAAP;AAAA,UAAiBC,KAAjB,eAAiBA,KAAjB;AAAA,UAAwBC,UAAxB,eAAwBA,UAAxB;AAAA,UAAoCC,QAApC,eAAoCA,QAApC;AAAA,UAAiDN,KAAjD;;AAEA,aACE,oBAAC,IAAD;AACE,QAAA,gCAAgC,EAAE,IADpC;AAEE,QAAA,KAAK,EAAEI,KAFT;AAGE,QAAA,GAAG,EAAE,KAAKN;AAHZ,SAIE,oBAAC,KAAD,eACME,KADN;AAEE,QAAA,KAAK,EAAE,CACLN,UAAU,CAACa,YADN,EAEL;AAQEC,UAAAA,KAAK,EAAEJ,KAAK,CAACI,KARf;AASEC,UAAAA,MAAM,EAAEL,KAAK,CAACK;AAThB,SAFK,EAaLJ,UAbK,CAFT;AAiBE,QAAA,GAAG,EAAEC;AAjBP,SAJF,EAuBGH,QAvBH,CADF;AA2BD;;;;EA7C2BV,KAAK,CAACiB,S;;AAgDpCC,MAAM,CAACC,OAAP,GAAiBhB,eAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Image = require('./Image');\nconst React = require('react');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://reactnative.dev/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<$FlowFixMeProps> {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?React.ElementRef<typeof View> = null;\n\n  _captureRef = ref => {\n    this._viewRef = ref;\n  };\n\n  render(): React.Node {\n    const {children, style, imageStyle, imageRef, ...props} = this.props;\n\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        style={style}\n        ref={this._captureRef}>\n        <Image\n          {...props}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: style.width,\n              height: style.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n"]},"metadata":{},"sourceType":"script"}