{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar styles = StyleSheet.create({\n  githubStyle: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#333\",\n    borderWidth: 0.5,\n    borderColor: \"#fff\",\n    height: 40,\n    width: 220,\n    borderRadius: 5,\n    margin: 5\n  },\n  imageIconStyle: {\n    padding: 10,\n    marginLeft: 15,\n    height: 25,\n    width: 25,\n    resizeMode: \"stretch\"\n  },\n  textStyle: {\n    color: \"#fff\",\n    marginLeft: 20,\n    marginRight: 20\n  }\n});\nexport var GitHubSocialButton = function (_React$Component) {\n  _inherits(GitHubSocialButton, _React$Component);\n\n  var _super = _createSuper(GitHubSocialButton);\n\n  function GitHubSocialButton() {\n    _classCallCheck(this, GitHubSocialButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GitHubSocialButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.githubStyle), this.props.buttonViewStyle),\n        onPress: this.props.onPress\n      }, React.createElement(Image, {\n        source: require(\"../images/github.png\"),\n        style: _objectSpread(_objectSpread({}, styles.imageIconStyle), this.props.logoStyle)\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.textStyle), this.props.textStyle)\n      }, this.props.buttonText ? this.props.buttonText : \"Sign in with GitHub\"));\n    }\n  }]);\n\n  return GitHubSocialButton;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/kisho/Downloads/phonestly-app-Google-pay/phonestly-app-Google-pay/node_modules/react-native-social-buttons/src/buttons/GitHubSocialButton.js"],"names":["React","styles","StyleSheet","create","githubStyle","flexDirection","alignItems","justifyContent","backgroundColor","borderWidth","borderColor","height","width","borderRadius","margin","imageIconStyle","padding","marginLeft","resizeMode","textStyle","color","marginRight","GitHubSocialButton","props","buttonViewStyle","onPress","require","logoStyle","buttonText","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,cAAc,EAAE,QAHL;AAIXC,IAAAA,eAAe,EAAE,MAJN;AAKXC,IAAAA,WAAW,EAAE,GALF;AAMXC,IAAAA,WAAW,EAAE,MANF;AAOXC,IAAAA,MAAM,EAAE,EAPG;AAQXC,IAAAA,KAAK,EAAE,GARI;AASXC,IAAAA,YAAY,EAAE,CATH;AAUXC,IAAAA,MAAM,EAAE;AAVG,GADkB;AAa/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE,EADK;AAEdC,IAAAA,UAAU,EAAE,EAFE;AAGdN,IAAAA,MAAM,EAAE,EAHM;AAIdC,IAAAA,KAAK,EAAE,EAJO;AAKdM,IAAAA,UAAU,EAAE;AALE,GAbe;AAoB/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETH,IAAAA,UAAU,EAAE,EAFH;AAGTI,IAAAA,WAAW,EAAE;AAHJ;AApBoB,CAAlB,CAAf;AA2BA,WAAaC,kBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK,kCAAOrB,MAAM,CAACG,WAAd,GAA8B,KAAKmB,KAAL,CAAWC,eAAzC,CADP;AAEE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE;AAFtB,SAIE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEC,OAAO,wBADjB;AAEE,QAAA,KAAK,kCAAMzB,MAAM,CAACc,cAAb,GAAgC,KAAKQ,KAAL,CAAWI,SAA3C;AAFP,QAJF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,kCAAM1B,MAAM,CAACkB,SAAb,GAA2B,KAAKI,KAAL,CAAWJ,SAAtC;AAAX,SACG,KAAKI,KAAL,CAAWK,UAAX,GACG,KAAKL,KAAL,CAAWK,UADd,GAEG,qBAHN,CARF,CADF;AAgBD;AAlBH;;AAAA;AAAA,EAAwC5B,KAAK,CAAC6B,SAA9C","sourcesContent":["import React from \"react\";\nimport { Text, TouchableOpacity, StyleSheet, Image } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  githubStyle: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#333\",\n    borderWidth: 0.5,\n    borderColor: \"#fff\",\n    height: 40,\n    width: 220,\n    borderRadius: 5,\n    margin: 5\n  },\n  imageIconStyle: {\n    padding: 10,\n    marginLeft: 15,\n    height: 25,\n    width: 25,\n    resizeMode: \"stretch\"\n  },\n  textStyle: {\n    color: \"#fff\",\n    marginLeft: 20,\n    marginRight: 20\n  }\n});\n\nexport class GitHubSocialButton extends React.Component {\n  render() {\n    return (\n      <TouchableOpacity\n        style={{ ...styles.githubStyle, ...this.props.buttonViewStyle }}\n        onPress={this.props.onPress}\n      >\n        <Image\n          source={require(\"../images/github.png\")}\n          style={{...styles.imageIconStyle, ...this.props.logoStyle}}\n        />\n        <Text style={{...styles.textStyle, ...this.props.textStyle}}>\n          {this.props.buttonText\n            ? this.props.buttonText\n            : \"Sign in with GitHub\"}\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}