{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport NativeDevSettings from \"../NativeModules/specs/NativeDevSettings\";\nimport NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\n\nvar DevSettings = function (_NativeEventEmitter) {\n  _inherits(DevSettings, _NativeEventEmitter);\n\n  var _super = _createSuper(DevSettings);\n\n  function DevSettings() {\n    var _this;\n\n    _classCallCheck(this, DevSettings);\n\n    _this = _super.call(this, NativeDevSettings);\n    _this._menuItems = new Map();\n    return _this;\n  }\n\n  _createClass(DevSettings, [{\n    key: \"addMenuItem\",\n    value: function addMenuItem(title, handler) {\n      var oldHandler = this._menuItems.get(title);\n\n      if (oldHandler != null) {\n        this.removeListener('didPressMenuItem', oldHandler);\n      } else {\n        NativeDevSettings.addMenuItem(title);\n      }\n\n      this._menuItems.set(title, handler);\n\n      this.addListener('didPressMenuItem', function (event) {\n        if (event.title === title) {\n          handler();\n        }\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(reason) {\n      if (typeof NativeDevSettings.reloadWithReason === 'function') {\n        NativeDevSettings.reloadWithReason(reason != null ? reason : 'Uncategorized from JS');\n      } else {\n        NativeDevSettings.reload();\n      }\n    }\n  }, {\n    key: \"onFastRefresh\",\n    value: function onFastRefresh() {\n      if (typeof NativeDevSettings.onFastRefresh === 'function') {\n        NativeDevSettings.onFastRefresh();\n      }\n    }\n  }]);\n\n  return DevSettings;\n}(NativeEventEmitter);\n\nvar NoopDevSettings = function () {\n  function NoopDevSettings() {\n    _classCallCheck(this, NoopDevSettings);\n  }\n\n  _createClass(NoopDevSettings, [{\n    key: \"addMenuItem\",\n    value: function addMenuItem(title, handler) {}\n  }, {\n    key: \"reload\",\n    value: function reload(reason) {}\n  }, {\n    key: \"onFastRefresh\",\n    value: function onFastRefresh() {}\n  }]);\n\n  return NoopDevSettings;\n}();\n\nmodule.exports = __DEV__ ? new DevSettings() : new NoopDevSettings();","map":{"version":3,"sources":["C:/Users/kisho/Downloads/phonestly-app-Google-pay/phonestly-app-Google-pay/node_modules/react-native/Libraries/Utilities/DevSettings.js"],"names":["NativeDevSettings","NativeEventEmitter","DevSettings","_menuItems","Map","title","handler","oldHandler","get","removeListener","addMenuItem","set","addListener","event","reason","reloadWithReason","reload","onFastRefresh","NoopDevSettings","module","exports","__DEV__"],"mappings":";;;;;;;;;;AAUA,OAAOA,iBAAP;AACA,OAAOC,kBAAP;;IAQMC,W;;;;;AAGJ,yBAAc;AAAA;;AAAA;;AACZ,8BAAMF,iBAAN;AAEA,UAAKG,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AAHY;AAIb;;;;WAED,qBAAYC,KAAZ,EAA2BC,OAA3B,EAAiD;AAK/C,UAAMC,UAAU,GAAG,KAAKJ,UAAL,CAAgBK,GAAhB,CAAoBH,KAApB,CAAnB;;AACA,UAAIE,UAAU,IAAI,IAAlB,EAAwB;AACtB,aAAKE,cAAL,CAAoB,kBAApB,EAAwCF,UAAxC;AACD,OAFD,MAEO;AACLP,QAAAA,iBAAiB,CAACU,WAAlB,CAA8BL,KAA9B;AACD;;AAED,WAAKF,UAAL,CAAgBQ,GAAhB,CAAoBN,KAApB,EAA2BC,OAA3B;;AACA,WAAKM,WAAL,CAAiB,kBAAjB,EAAqC,UAAAC,KAAK,EAAI;AAC5C,YAAIA,KAAK,CAACR,KAAN,KAAgBA,KAApB,EAA2B;AACzBC,UAAAA,OAAO;AACR;AACF,OAJD;AAKD;;;WAED,gBAAOQ,MAAP,EAAwB;AACtB,UAAI,OAAOd,iBAAiB,CAACe,gBAAzB,KAA8C,UAAlD,EAA8D;AAC5Df,QAAAA,iBAAiB,CAACe,gBAAlB,CAAmCD,MAAnC,WAAmCA,MAAnC,GAA6C,uBAA7C;AACD,OAFD,MAEO;AACLd,QAAAA,iBAAiB,CAACgB,MAAlB;AACD;AACF;;;WAED,yBAAgB;AACd,UAAI,OAAOhB,iBAAiB,CAACiB,aAAzB,KAA2C,UAA/C,EAA2D;AACzDjB,QAAAA,iBAAiB,CAACiB,aAAlB;AACD;AACF;;;;EAzCuBhB,kB;;IA+CpBiB,e;;;;;;;WACJ,qBAAYb,KAAZ,EAA2BC,OAA3B,EAAiD,CAAE;;;WACnD,gBAAOQ,MAAP,EAAwB,CAAE;;;WAC1B,yBAAgB,CAAE;;;;;;AAGpBK,MAAM,CAACC,OAAP,GAAmBC,OAAO,GACtB,IAAInB,WAAJ,EADsB,GAEtB,IAAIgB,eAAJ,EAFJ","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeDevSettings from '../NativeModules/specs/NativeDevSettings';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\n\ninterface IDevSettings {\n  addMenuItem(title: string, handler: () => mixed): void;\n  reload(reason?: string): void;\n  onFastRefresh(): void;\n}\n\nclass DevSettings extends NativeEventEmitter implements IDevSettings {\n  _menuItems: Map<string, () => mixed>;\n\n  constructor() {\n    super(NativeDevSettings);\n\n    this._menuItems = new Map();\n  }\n\n  addMenuItem(title: string, handler: () => mixed) {\n    // Make sure items are not added multiple times. This can\n    // happen when hot reloading the module that registers the\n    // menu items. The title is used as the id which means we\n    // don't support multiple items with the same name.\n    const oldHandler = this._menuItems.get(title);\n    if (oldHandler != null) {\n      this.removeListener('didPressMenuItem', oldHandler);\n    } else {\n      NativeDevSettings.addMenuItem(title);\n    }\n\n    this._menuItems.set(title, handler);\n    this.addListener('didPressMenuItem', event => {\n      if (event.title === title) {\n        handler();\n      }\n    });\n  }\n\n  reload(reason?: string) {\n    if (typeof NativeDevSettings.reloadWithReason === 'function') {\n      NativeDevSettings.reloadWithReason(reason ?? 'Uncategorized from JS');\n    } else {\n      NativeDevSettings.reload();\n    }\n  }\n\n  onFastRefresh() {\n    if (typeof NativeDevSettings.onFastRefresh === 'function') {\n      NativeDevSettings.onFastRefresh();\n    }\n  }\n\n  // TODO: Add other dev setting methods exposed by the native module.\n}\n\n// Avoid including the full `NativeDevSettings` class in prod.\nclass NoopDevSettings implements IDevSettings {\n  addMenuItem(title: string, handler: () => mixed) {}\n  reload(reason?: string) {}\n  onFastRefresh() {}\n}\n\nmodule.exports = ((__DEV__\n  ? new DevSettings()\n  : new NoopDevSettings()): IDevSettings);\n"]},"metadata":{},"sourceType":"module"}